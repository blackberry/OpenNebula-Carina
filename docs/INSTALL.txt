
This document describes the process to setup of the Carina Environment 
Manager for an OpenNebula installation. It is assumed you have OpenNebula
installed and configured and can startup VMs in it. Carina can be installed
on a bare VM containing only the OS or it can be installed from a VM
applicance that pre-installs all the dependencies. 

RAW INSTALL
===========

The following are notes for setting up the Carina Environment Manager in a 
Ubuntu VM. This management VM should be created in a management VDC.  

0. The network on which the management VM runs must be accessible from the  
networks on which service VMs will be created.  Specifically service VMs 
will need to be able to connect to the management VM on port 80/http and the 
management VM must be able to connect to the service VMs on port 22/ssh.

1. Create an Ubuntu VM on the management VDC and setup mysql and apache on 
   the node.
  -apt-get install apache2
  -apt-get install mysql-server
  -apt-get install mysql-client
  -apt-get install libmysqlclient-dev 

2. Install OpenNebula client commands on this node (including ruby dependencies) in /var/lib/one. 
  -apt-get install ruby
  -apt-get install ruby-dev
  -apt-get install rubygems
  -mkdir /var/lib/one
  -chown -R carina /var/lib/one
  -chgrp -R carina /var/lib/one
  -In openenbula directory ./install.sh -c -d /var/lib/one (run as carina)
  -export ONE_AUTH=/home/carina/.one_auth
  -export ONE_LOCATION=/var/lib/one
  -Copy onecmd into /var/lib/one/bin

NOTE: All testing so far has been with OpenNebula 3.0

3. Setup ruby dependencies for oneenvd
   sudo gem install sinatra
   sudo gem install mysql
   sudo gem install json
   sudo gem install rest-client
   sudo gem install redis

4. Untar/unzip the opennebula-carina package in /var/lib/one

5. Create schema in MySQL

   -/var/lib/one/opennebula-carina/misc/createschema.sh 

6. Setup CGI bin for Apache
   -In /etc/apache2/apache2.conf
ScriptAlias /cgi-bin/ "/usr/lib/cgi-bin/"

<Directory "/usr/lib/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
</Directory>
   - cp /var/lib/one/opennebula-carina/cgi-bin/* /usr/lib/cgi-bin
   - Change DB_HOST/DB_PASS variable in scripts to reflect mysql host/password 


7. Set up and install Redis VMs
   -Download and build redis from http://redis.io (version 2.6)
   -Create 2 VMs to act as master and slave and install redis
   -Start the redis server
         redis-server --daemonize yes --appendonly yes (on master)
         redis-server --daemonize yes --slaveof  <masterip> 6379 (on slave)

8. Create an OS account "carina"  on the management VM that will run the 
   global scheduler. Ensure that the accounts profile is set up with
   the correct PATH and ONE environment variables so that ONE commands work.

   - sudo useradd -d /home/carina -m carina
   - /bin/su carina
   - mkdir $HOME/logs $HOME/work $HOME/conf $HOME/vm
   - cp /var/lib/one/opennebula-carina/etc/oneenv.conf to $HOME/conf/oneenv.conf
   - Set LOAD_VM_INFO=true (see comments in the file)
   - mv /var/lib/one/opennebula-carina/etc/oneenv.conf  /var/lib/one/opennebula-carina/etc/oneenv.conf.bak
   - /var/lib/one/opennebula-carina/misc/createschema.sh  carina
   - cp  /var/lib/one/opennebula-carina/etc/config.rb $HOME/config.rb
    (edit the config.rb to set the appropriate endpoints and templates)

   - Edit the global.rb to reflect the resource pools and services that will be in the system

   - /var/lib/one/opennebula-carina/misc/start-oneenvd-gs.sh (start the global scheduler)
   - /var/lib/one/opennebula-carina/misc/start-oneenvd.sh (start the oneenvd)


NOTE: The oneenvd in this OS account is only used to collect the VM status/load
information.

9. Each service that will use the system should have an OS account on the
management VM. This account will be used to run the oneenvd that can be 
accessed from the corresponding account on the OpenNebula server.

   - sudo useradd -d /home/<svc> -m <svc>
   - /bin/su <svc>
   - mkdir $HOME/logs $HOME/work $HOME/conf $HOME/vm
   - cp /var/lib/one/opennebula-carina/etc/oneenv.conf.bak to $HOME/conf/oneenv.conf
   - Change the CARINA_PORT to be unique for each service and set the CARINA_IP to point to Carina VM
   - Set LOAD_VM_INFO=false 
   - cp /var/lib/one/opennebula-carina/etc/config.rb $HOME/config.rb
    (edit the config.rb to set the appropriate service-specific endpoints and 
    templates)
   - Generate ssh keys for each service and copy into /var/www/repo/<service>/context (these will be copied into the service's VM and then later used when doing a passwordless ssh into the VM)
         ssh-keygen -t rsa
         cp $HOME/.ssh/id_rsa.pub /var/www/repo/<service>/context/authorized_keys
   - /var/lib/one/opennebula-carina/misc/createschema.sh <svc>
   - cp /var/lib/one/opennebula-carina/context/*  /var/www/repo/<service>/context (optional if you want to use the sample contextualization scripts)
   - setup /var/www/downloads to hold common packages/binaries that are 
   accessed by the sample contextualization scripts if required
   - /var/lib/one/opennebula-carina/misc/start-oneenvd.sh (start the oneenvd for that service)

VM APPLIANCE INSTALL
====================

A VM applicance is provided with all the dependencies already installed and
steps 1-8 described above completed. After bringing up the VM from the 
template do the following:

- Login to the VM with default username/password: carina/carina
- Refresh the /var/lib/one/opennebula-carina with the latest version from
  Github
- Edit /home/carina/etc/oneenv.conf to set the CARINA_IP parameter to 
  the IP address of the VM
- The appliance is installed with OpenNebula 3.6 by default. If you are
  running older version of OpenNebula, install the appropriate client CLIs.
  Built binaries for OpenNebula 3.0 are provided in the /home/carina/dist
- Edit the /var/lib/one/opennebula-carina/etc/global.rb with the resource 
  pools/service specific to your environment
- Create per-service accounts as required as described in step 9 above


